// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetShop_Api.Models;

namespace PetShop_Api.Migrations
{
    [DbContext(typeof(PetshopDBContext))]
    partial class PetshopDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PetShop_Api.Models.AppointmentModel", b =>
                {
                    b.Property<long>("IdAppointment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long?>("PetIdPet")
                        .HasColumnType("bigint");

                    b.Property<long?>("VeterinarianIdVeterinarian")
                        .HasColumnType("bigint");

                    b.HasKey("IdAppointment");

                    b.HasIndex("PetIdPet");

                    b.HasIndex("VeterinarianIdVeterinarian");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("PetShop_Api.Models.AppointmentRecord", b =>
                {
                    b.Property<long>("IdAppointmentRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("Appointment")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("IdPet")
                        .HasColumnType("bigint");

                    b.Property<long>("IdVet")
                        .HasColumnType("bigint");

                    b.Property<string>("abstractAppointment")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("IdAppointmentRecord");

                    b.ToTable("AppointmentsRecords");
                });

            modelBuilder.Entity("PetShop_Api.Models.CategoryModel", b =>
                {
                    b.Property<long>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("IdCategory");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("PetShop_Api.Models.OrderModel", b =>
                {
                    b.Property<long>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("IdPerson")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long?>("StateOrderIdStateOrder")
                        .HasColumnType("bigint");

                    b.Property<double>("TotalValue")
                        .HasColumnType("double");

                    b.Property<long?>("UserIdPerson")
                        .HasColumnType("bigint");

                    b.HasKey("IdOrder");

                    b.HasIndex("StateOrderIdStateOrder");

                    b.HasIndex("UserIdPerson");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PetShop_Api.Models.OrderRecordModel", b =>
                {
                    b.Property<long>("IdOrderRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("IdOrder")
                        .HasColumnType("bigint");

                    b.Property<long>("IdUser")
                        .HasColumnType("bigint");

                    b.Property<double>("TotalValue")
                        .HasColumnType("double");

                    b.HasKey("IdOrderRecord");

                    b.ToTable("OrdersRecords");
                });

            modelBuilder.Entity("PetShop_Api.Models.Order_ProductsModel", b =>
                {
                    b.Property<long>("IdOrder_Products")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("IdOrder")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductIdProduct")
                        .HasColumnType("bigint");

                    b.HasKey("IdOrder_Products");

                    b.HasIndex("ProductIdProduct");

                    b.ToTable("Orders_Products");
                });

            modelBuilder.Entity("PetShop_Api.Models.PetModel", b =>
                {
                    b.Property<long>("IdPet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("GeneralInfo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long?>("SpecieIdSpecie")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserIdPerson")
                        .HasColumnType("bigint");

                    b.HasKey("IdPet");

                    b.HasIndex("SpecieIdSpecie");

                    b.HasIndex("UserIdPerson");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("PetShop_Api.Models.ProductModel", b =>
                {
                    b.Property<long>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("CategoryIdCategory")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("QuantityAvailable")
                        .HasColumnType("int");

                    b.Property<long?>("StateProductIdStateProduct")
                        .HasColumnType("bigint");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("double");

                    b.HasKey("IdProduct");

                    b.HasIndex("CategoryIdCategory");

                    b.HasIndex("StateProductIdStateProduct");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("PetShop_Api.Models.Specialties_VetsModel", b =>
                {
                    b.Property<long>("IdSpecialties_Vets")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("SpecialtyIdSpecialty")
                        .HasColumnType("bigint");

                    b.Property<long?>("VeterinarianIdVeterinarian")
                        .HasColumnType("bigint");

                    b.HasKey("IdSpecialties_Vets");

                    b.HasIndex("SpecialtyIdSpecialty");

                    b.HasIndex("VeterinarianIdVeterinarian");

                    b.ToTable("Specialties_Vets");
                });

            modelBuilder.Entity("PetShop_Api.Models.SpecialtyModel", b =>
                {
                    b.Property<long>("IdSpecialty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Specialty")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("IdSpecialty");

                    b.ToTable("Specialties");
                });

            modelBuilder.Entity("PetShop_Api.Models.SpecieModel", b =>
                {
                    b.Property<long>("IdSpecie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Specie")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("IdSpecie");

                    b.ToTable("Species");
                });

            modelBuilder.Entity("PetShop_Api.Models.StateOrderModel", b =>
                {
                    b.Property<long>("IdStateOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("IdStateOrder");

                    b.ToTable("StatesOrder");
                });

            modelBuilder.Entity("PetShop_Api.Models.StateProductModel", b =>
                {
                    b.Property<long>("IdStateProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("IdStateProduct");

                    b.ToTable("StatesProducts");
                });

            modelBuilder.Entity("PetShop_Api.Models.UserModel", b =>
                {
                    b.Property<long>("IdPerson")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DocumentId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Telephone")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("IdPerson");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PetShop_Api.Models.VeterinarianModel", b =>
                {
                    b.Property<long>("IdVeterinarian")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("UserIdPerson")
                        .HasColumnType("bigint");

                    b.HasKey("IdVeterinarian");

                    b.HasIndex("UserIdPerson");

                    b.ToTable("Veterinarians");
                });

            modelBuilder.Entity("PetShop_Api.Models.WishListModel", b =>
                {
                    b.Property<long>("IdWishList")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("UserIdPerson")
                        .HasColumnType("bigint");

                    b.HasKey("IdWishList");

                    b.HasIndex("UserIdPerson");

                    b.ToTable("WishLists");
                });

            modelBuilder.Entity("PetShop_Api.Models.WishList_ProductsModel", b =>
                {
                    b.Property<long>("IdWishList_Products")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductIdProduct")
                        .HasColumnType("bigint");

                    b.Property<long?>("WishListIdWishList")
                        .HasColumnType("bigint");

                    b.HasKey("IdWishList_Products");

                    b.HasIndex("ProductIdProduct");

                    b.HasIndex("WishListIdWishList");

                    b.ToTable("WishLists_Products");
                });

            modelBuilder.Entity("PetShop_Api.Models.AppointmentModel", b =>
                {
                    b.HasOne("PetShop_Api.Models.PetModel", "Pet")
                        .WithMany("Appointments")
                        .HasForeignKey("PetIdPet");

                    b.HasOne("PetShop_Api.Models.VeterinarianModel", "Veterinarian")
                        .WithMany("Appointments")
                        .HasForeignKey("VeterinarianIdVeterinarian");
                });

            modelBuilder.Entity("PetShop_Api.Models.OrderModel", b =>
                {
                    b.HasOne("PetShop_Api.Models.StateOrderModel", "StateOrder")
                        .WithMany("Orders")
                        .HasForeignKey("StateOrderIdStateOrder");

                    b.HasOne("PetShop_Api.Models.UserModel", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserIdPerson");
                });

            modelBuilder.Entity("PetShop_Api.Models.Order_ProductsModel", b =>
                {
                    b.HasOne("PetShop_Api.Models.ProductModel", "Product")
                        .WithMany("Orders_Products")
                        .HasForeignKey("ProductIdProduct");
                });

            modelBuilder.Entity("PetShop_Api.Models.PetModel", b =>
                {
                    b.HasOne("PetShop_Api.Models.SpecieModel", "Specie")
                        .WithMany("Pets")
                        .HasForeignKey("SpecieIdSpecie");

                    b.HasOne("PetShop_Api.Models.UserModel", "User")
                        .WithMany("Pets")
                        .HasForeignKey("UserIdPerson");
                });

            modelBuilder.Entity("PetShop_Api.Models.ProductModel", b =>
                {
                    b.HasOne("PetShop_Api.Models.CategoryModel", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryIdCategory");

                    b.HasOne("PetShop_Api.Models.StateProductModel", "StateProduct")
                        .WithMany("Products")
                        .HasForeignKey("StateProductIdStateProduct");
                });

            modelBuilder.Entity("PetShop_Api.Models.Specialties_VetsModel", b =>
                {
                    b.HasOne("PetShop_Api.Models.SpecialtyModel", "Specialty")
                        .WithMany("Specialties_Vets")
                        .HasForeignKey("SpecialtyIdSpecialty");

                    b.HasOne("PetShop_Api.Models.VeterinarianModel", "Veterinarian")
                        .WithMany("Specialties_VetsModel")
                        .HasForeignKey("VeterinarianIdVeterinarian");
                });

            modelBuilder.Entity("PetShop_Api.Models.VeterinarianModel", b =>
                {
                    b.HasOne("PetShop_Api.Models.UserModel", "User")
                        .WithMany("Veterinarians")
                        .HasForeignKey("UserIdPerson");
                });

            modelBuilder.Entity("PetShop_Api.Models.WishListModel", b =>
                {
                    b.HasOne("PetShop_Api.Models.UserModel", "User")
                        .WithMany("WishLists")
                        .HasForeignKey("UserIdPerson");
                });

            modelBuilder.Entity("PetShop_Api.Models.WishList_ProductsModel", b =>
                {
                    b.HasOne("PetShop_Api.Models.ProductModel", "Product")
                        .WithMany("WishLists_Products")
                        .HasForeignKey("ProductIdProduct");

                    b.HasOne("PetShop_Api.Models.WishListModel", "WishList")
                        .WithMany("WishLists_Products")
                        .HasForeignKey("WishListIdWishList");
                });
#pragma warning restore 612, 618
        }
    }
}
